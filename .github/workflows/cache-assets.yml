name: Cache README Assets

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */12 * * *"  # every 12 hours

jobs:
  cache-readme-assets:
    runs-on: ubuntu-latest
    env:
      GH_USER: varshney565
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure assets dirs
        run: |
          mkdir -p assets assets/icons dist

      # -------- GitHub stats (keep old on provider error) --------
      - name: Fetch GitHub stats
        shell: bash
        run: |
          set -e
          out="assets/github-stats.svg"; tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://github-readme-stats.vercel.app/api?username=${GH_USER}&show_icons=true&include_all_commits=true&count_private=true&cache_seconds=21600&theme=tokyonight" \
            -o "$tmp" || true
          if [ -s "$tmp" ] && ! grep -qi "something went wrong" "$tmp"; then mv "$tmp" "$out"; else rm -f "$tmp"; fi
          [ -s "$out" ] || printf '<svg xmlns="http://www.w3.org/2000/svg" width="480" height="200"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">Stats unavailable — cached placeholder</text></svg>' > "$out"

      # -------- Streak (use stable domain; keep old on error) --------
      - name: Fetch streak
        shell: bash
        run: |
          set -e
          out="assets/github-streak.svg"; tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://streak-stats.demolab.com?user=${GH_USER}&theme=tokyonight" \
            -o "$tmp" || true
          if [ -s "$tmp" ] && ! grep -qi "failed to" "$tmp"; then mv "$tmp" "$out"; else rm -f "$tmp"; fi
          [ -s "$out" ] || printf '<svg xmlns="http://www.w3.org/2000/svg" width="480" height="200"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">Streak unavailable — cached placeholder</text></svg>' > "$out"

      # -------- Top languages (keep old on error) --------
      - name: Fetch top languages
        shell: bash
        run: |
          set -e
          out="assets/top-langs.svg"; tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://github-readme-stats.vercel.app/api/top-langs/?username=${GH_USER}&layout=compact&langs_count=10&cache_seconds=21600&theme=tokyonight" \
            -o "$tmp" || true
          if [ -s "$tmp" ] && ! grep -qi "something went wrong" "$tmp"; then mv "$tmp" "$out"; else rm -f "$tmp"; fi
          [ -s "$out" ] || printf '<svg xmlns="http://www.w3.org/2000/svg" width="520" height="200"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">Top languages unavailable — cached placeholder</text></svg>' > "$out"

      # -------- Typing line (salesp07 vibe) --------
      - name: Fetch typing line
        shell: bash
        run: |
          set -e
          out="assets/typing.svg"; tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://readme-typing-svg.demolab.com?font=Inter&weight=700&size=24&pause=900&duration=2600&color=00FFFF&center=true&vCenter=true&width=700&lines=Blockchain+Developer;Rust+%7C+Go+%7C+Python;Competitive+Programmer" \
            -o "$tmp" || true
          [ -s "$tmp" ] && mv "$tmp" "$out" || printf '<svg xmlns="http://www.w3.org/2000/svg" width="700" height="40"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">Blockchain Developer · Competitive Programmer</text></svg>' > "$out"

      # -------- Advanced trophies (matrix theme) --------
      - name: Fetch advanced trophies
        shell: bash
        run: |
          set -e
          out="assets/trophies-advanced.svg"; tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://github-profile-trophy.vercel.app/?username=${GH_USER}&theme=matrix&no-bg=true&no-frame=true&column=6" \
            -o "$tmp" || true
          [ -s "$tmp" ] && mv "$tmp" "$out" || printf '<svg xmlns="http://www.w3.org/2000/svg" width="920" height="160"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">Trophies will load after next run</text></svg>' > "$out"

      # -------- Snake (correct inputs; normalize filename) --------
      - name: Generate snake (SVG)
        uses: Platane/snk/svg-only@v3
        continue-on-error: true
        with:
          github_user_name: ${{ env.GH_USER }}
          outputs: |
            dist/snake.svg?palette=github-dark

      - name: Move snake into assets
        shell: bash
        run: |
          set -e
          if [ -f dist/snake.svg ]; then
            mv dist/snake.svg assets/snake.svg
          elif ls dist/snake.svg\?palette=github-dark >/dev/null 2>&1; then
            mv "dist/snake.svg?palette=github-dark" assets/snake.svg
          elif [ -f snake.svg ]; then
            mv snake.svg assets/snake.svg
          fi
          [ -s assets/snake.svg ] || printf '<svg xmlns="http://www.w3.org/2000/svg" width="920" height="160"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">Snake will load after next run</text></svg>' > assets/snake.svg

      # -------- 3D contribution graph (needs USERNAME env) --------
      - name: Generate 3D contribution graph
        uses: yoshi389111/github-profile-3d-contrib@0.7.1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ env.GH_USER }}

      - name: Move 3D graph into assets (wherever it was created)
        shell: bash
        run: |
          set -e
          for p in profile-3d-contrib/profile-3d-contrib.svg output/profile-3d-contrib.svg profile-3d-contrib.svg; do
            if [ -f "$p" ]; then
              mv "$p" assets/profile-3d-contrib.svg
              break
            fi
          done
          [ -s assets/profile-3d-contrib.svg ] || printf '<svg xmlns="http://www.w3.org/2000/svg" width="920" height="260"><rect width="100%%" height="100%%" fill="#0d1117"/><text x="50%%" y="50%%" fill="#58a6ff" font-size="16" font-family="Arial" text-anchor="middle" dominant-baseline="middle">3D graph will load after next run</text></svg>' > assets/profile-3d-contrib.svg

      # -------- Commit if anything changed --------
      - name: Commit refreshed assets
        shell: bash
        run: |
          if [ -n "$(git status --porcelain assets)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add assets/*
            git commit -m "chore: refresh cached README assets"
            git push
          else
            echo "No changes detected"
          fi
