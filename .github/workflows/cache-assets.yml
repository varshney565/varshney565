name: Cache README Assets

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */12 * * *"  # every 12 hours

jobs:
  cache-readme-assets:
    runs-on: ubuntu-latest
    env:
      GH_USER: varshney565
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure assets dirs
        run: |
          mkdir -p assets
          mkdir -p assets/icons

      - name: Fetch GitHub stats (keep old if provider errors)
        shell: bash
        run: |
          set -e
          out="assets/github-stats.svg"
          tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://github-readme-stats.vercel.app/api?username=${GH_USER}&show_icons=true&include_all_commits=true&count_private=true&cache_seconds=21600&theme=tokyonight" \
            -o "$tmp" || true
          if [ -s "$tmp" ] && ! grep -qi "something went wrong" "$tmp"; then
            mv "$tmp" "$out"
            echo "updated $out"
          else
            rm -f "$tmp"
            echo "kept previous $out (bad provider response)"
          fi

      - name: Fetch streak (keep old if provider errors)
        shell: bash
        run: |
          set -e
          out="assets/github-streak.svg"
          tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://streak-stats.demolab.com?user=${GH_USER}&theme=tokyonight" \
            -o "$tmp" || true
          if [ -s "$tmp" ] && ! grep -qi "failed to" "$tmp"; then
            mv "$tmp" "$out"
            echo "updated $out"
          else
            rm -f "$tmp"
            echo "kept previous $out (bad provider response)"
          fi

      - name: Fetch top languages (keep old if provider errors)
        shell: bash
        run: |
          set -e
          out="assets/top-langs.svg"
          tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://github-readme-stats.vercel.app/api/top-langs/?username=${GH_USER}&layout=compact&langs_count=10&cache_seconds=21600&theme=tokyonight" \
            -o "$tmp" || true
          if [ -s "$tmp" ] && ! grep -qi "something went wrong" "$tmp"; then
            mv "$tmp" "$out"
            echo "updated $out"
          else
            rm -f "$tmp"
            echo "kept previous $out (bad provider response)"
          fi

      - name: Fetch typing line
        shell: bash
        run: |
          set -e
          out="assets/typing.svg"
          tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://readme-typing-svg.demolab.com?font=Inter&weight=700&size=24&pause=900&duration=2600&color=00FFFF&center=true&vCenter=true&width=700&lines=Blockchain+Developer;Rust+%7C+Go+%7C+Python;Competitive+Programmer" \
            -o "$tmp" || true
          [ -s "$tmp" ] && mv "$tmp" "$out" || rm -f "$tmp"

      - name: Fetch advanced trophies (matrix theme)
        shell: bash
        run: |
          set -e
          out="assets/trophies-advanced.svg"
          tmp="${out}.tmp"
          curl -fL --retry 5 --retry-delay 5 \
            "https://github-profile-trophy.vercel.app/?username=${GH_USER}&theme=matrix&no-bg=true&no-frame=true&column=6" \
            -o "$tmp" || true
          [ -s "$tmp" ] && mv "$tmp" "$out" || rm -f "$tmp"

      - name: Generate snake (SVG) to a temp file
        uses: Platane/snk/svg-only@v3
        continue-on-error: true
        with:
          github_user_name: ${{ env.GH_USER }}
          outputs: |
            assets/snake.svg?palette=github-dark

      - name: Normalize snake filename (strip query suffix)
        shell: bash
        run: |
          set -e
          # If the action created 'snake.svg?palette=github-dark', normalize to 'snake.svg'
          if ls assets/snake.svg\?palette=github-dark >/dev/null 2>&1; then
            mv "assets/snake.svg?palette=github-dark" assets/snake.svg
            echo "normalized snake.svg"
          fi

      - name: Generate 3D contribution graph
        uses: yoshi389111/github-profile-3d-contrib@0.7.1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ env.GH_USER }}

      - name: Move 3D contrib into assets (wherever it was created)
        shell: bash
        run: |
          set -e
          # common output locations the action uses
          if [ -f "profile-3d-contrib/profile-3d-contrib.svg" ]; then
            mv profile-3d-contrib/profile-3d-contrib.svg assets/profile-3d-contrib.svg
          elif [ -f "output/profile-3d-contrib.svg" ]; then
            mv output/profile-3d-contrib.svg assets/profile-3d-contrib.svg
          elif [ -f "profile-3d-contrib.svg" ]; then
            mv profile-3d-contrib.svg assets/profile-3d-contrib.svg
          fi

      - name: Commit refreshed assets
        shell: bash
        run: |
          if [ -n "$(git status --porcelain assets)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add assets/*
            git commit -m "chore: refresh cached README assets"
            git push
          else
            echo "No changes detected"
          fi
